doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Drupal and ElasticSearch

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 How I learned to love Elasticsearch
        // Joke about 'we'?
        h4 A love story, by @tizzo y @nstielau

      section.content(data-bespoke-fx-transition="cube" data-bespoke-fx-direction="vertical" data-bespoke-fx-reverse="true")
        // TODO: Side by side
        div(style="float:right;")
          h2 Nick Stielau
          h3 @nstielau:
          h4 Panthoer, Operator
          img(src="/images/nstielau.jpg" width="100")
        div
          h2 Howard Tyson
          h3 aka @tizzo:
          img(src="/images/tizzo.jpg" width="100")

      section.act
        h1 Who is this ElasticSearch guy, anyway?
        // What do we want to for 'Act X' images? curtains

      section.tizzo.content
        h2 Elasticsearch is..
        p
          = 'a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management.'

      section.content.cluster
        h2 ElasticSearch is Distributed
        p "Elasticsearch allows you to start small and scale horizontally as you grow. Simply add more nodes, and let the cluster automatically take advantage of the extra hardware."

      section.content.asf
        h2 ElasticSearch is Open source
        p The Apache License (/əˈpætʃi/) is a free software license written by the Apache Software Foundation (ASF). The Apache License requires preservation of the copyright notice and disclaimer.

      section.content
        h2 Document-oriented
        pre
          code.language-javascript.
            {
              "name": "Fin",
              "nickname": "Finito Burrito",
              "breed": "megamutt",
              "species": "canine"
            }
        ul
          li no pre-defined schema

      section.content
        h2 Modern

      section.content
        h2 Near Realtime

      section.content.lucene
        h2 Built on Apache Lucene™
        p (like all good open source search)

      section.content
        h2 ... Java (and the JVM)

      section.content
        h2 Clusterable

      section.content
        // TODO: We should finish breaking this up into subslides
        // for this section.
        h2 ES vs. Solr
        ul
          li How does it compare Solr? (NS as Solr vs. HT as ES, i.e. mac vs. pc)
          li Both Apache 2 Licensed
          li Both supported by commercial orgs
          li Both support HTTP indexes
          li Competition makes stuff better!
          li http://solr-vs-elasticsearch.com/

      section.content
        h2 ES vs. MySQL Full-text Search
        p This works out-of-the-box, but it can
        ul
          li hit the db hard
          li be slow
          li not provide good results

      section.content
        h2 ES vs. Sphinx
        ul
          li MySQL integrated search server

      section.content
        h2 Integrations
        ul
          li Solr has great Drupal Integration
          li ES has great ELK/Kibana Integrations
          li More and more ES examples/plugins/modules, etc

      section
        h1 Stop!
        h2 DemoTime

      section.tizzo.content
        h2 Starting instances (demo video)
        // TODO: Add video

      section.tizzo.content
        h2  Clustering

      section.act
        h1 Act II:  The Nitty and The Gritty

      section.content
        // http://joelabrahamsson.com/elasticsearch-101/
        h2 Inserting docs
        pre
          code.language-javascript.
            curl -XPUT "http://localhost:9200/animals/dogs/1" -d'
            {
                "breed": "'doodle'",
                "name": "Molly",
                "is_good": false
            }'

      section.content
        h2 Other stuff
        Create an index (curl)
        pre
          code.language-javascript.
            curl 127.0.0.1

      section.content
        h2 store 2 docs
        pre
          code.language-javascript.
            curl 127.0.0.1

      section.content
        h2 query for 1
        pre
          code.language-javascript.
            curl 127.0.0.1


      section
        Web UI? or just Loading JSON in browser
        aka “If I can’t see it in a browser it didn’t happen, this is DrupalCon”

      section.tizzo.chapter
        h1 Advanced Features
        // Could go over the score boosting example from Alley below

      section.content
        h2 Histogram

      section.content
        h2 Percolate

      section
        img(src="images/percolate-yo-dawg.jpg")

      section
        h2 Store a Query
        pre
          code.language-javascript.
            curl -XPUT 'localhost:9200/my-index/.percolator/1' -d '{
              "query" : {
                "match" : {
                  "message" : "bonsai tree"
                }
              }
            }'
      section
        h2 Query for matches
        h3 Running:
        pre
          code.language-javascript.
            curl -XGET 'localhost:9200/my-index/message/_percolate' -d '{
              "doc" : {
                "message" : "A new bonsai tree in the office"
              }
            }'
      section
        h2 Get results
        pre
          code.language-javascript.
            {
              "took" : 19,
              "_shards" : {
                "total" : 5,
                "successful" : 5,
                "failed" : 0
              },
              "total" : 1,
              "matches" : [
                {
                  "_index" : "my-index",
                  "_id" : "1"
                }
              ]
            }


      section.act
        h1 Act III: ElasticSearch use-cases

      section
        h1 Drupal Modules (HT)
        p
          Search API Elasticsearch
          a http://www.sitepoint.com/install-integrate-elasticsearch-drupal/
          Howard to write-up/screen capture

      section.nstielau.content
        h2 WordPress
        p never a coalesence around Drupal, acquia etc put weigth behind solr.  Done so well, not much other need. Setup solr is painful.  "In WP, core search is about as bad as Drupals.  Select title like blah blah sort by date". 500k nodes is unusable, WP came later, and ES is way better for web-indexing.  Much much easier to install & configure, easier to cluster, communicates with JSON, more options for weighting content, or, even if it does have the same features, it makes them easier to access.  Solr is pretty good. Matt Boynes did searchpress, drop-in search replacement for WP (on github).

        p ES Docs is dense, ask someone Explain it to me like a 5 year old.
        One suggestion: Ornately docs, but not some much examples....

        p Really new apple to a rotten apple.  WP-Query-Object, generally really specific to MySQL.  Kinda like Views, you can go off the rails.  Matt Boynes, WP-Query-Object subclass, to run WP out of ES. LEFT JOIN BLAH, no, let Lucene do it.  I don't want to deal with.

        p Matt Boynes WP Camp LA (see LA).

      section.nstielau.content
        h2 a note about capitalization
        h3 Elasticsearch
        h3 WordPress

      section.content
        h2 Example: Score boosting
        p
          strong Scenario:
          span Weight search results by popularity.
        p
          strong Solution:
          span Use `function_score` with a periodically updated boost factor.
          ul
            li Every 2h, query Google Analytics
            li Update custom field: "ga_boost" = 1-RANK
            li Use `function_score` multiple natural score by "ga_boost"

      section.content
        h2 Example: Score boosting
        p
          strong Scenario:
          span Weight search results by popularity.
        p
          strong Solution:
          span Use `function_score` with a decay function
          ul
            li Every 2h, query Google Analytics
            li Update custom field: "ga_rank" = RANK
            li Use `function_score` multiple natural score by "ga_boost"
        pre
          code.language-javascript.
            "DECAY_FUNCTION": {
                "FIELD_NAME": {
                      "origin": "0",
                      "scale": "100"
                }
            }


      section.chapter
        h1 Devops <3 ES

      section.content.nstielau
        h2 ELK Intro, value prop
        ul
          lu What are rich logs?
          li Logstash

      section.content.tizzo
        h2 How do I get my data into ELK?
        ul
          li Logstash
          li WatchDog (Amitai: Log http module)
          li System (syslog)
          li error log
          li Access-Logs
          li Parsing in Logstash (enrichifying™)

      section.nstielau.content
        h2 Use-cases
        ul
          li Security
          li Exceptions
          li JS/Browser stuff
          li Example (NS)
          li Diagnose outage
          li Kibana (Nick)
          li Some Pantheon Screenshots, video of drilling down
          li brute-force password guessing

      section.content
        h2 Kibana, ELK Demo Video (HT)

      section.content
        h2 Up and running with ES
        ul
          li DIY (HT)
          li MVP Config Managment (Chef, Puppet)
          li Clustered, Consul for Service Discovery
          li To the future!

      section.content
        h2 securing ES
        p
          a defaults are super open
          a http://brudtkuhl.com/securing-elasticsearch/

      section.content
        h2 Hosted ElasticSearch
        ul
          li host near you
          li price based on data, etc
        ul
          li https://qbox.io/
          li https://www.compose.io/elasticsearch/
          li https://www.found.no/
          li https://bonsai.io/

      section.content.nstielau
        h2 How to sneak in ES
        ul
          li Use for ops
          li show is awesome

      section.content
        h2 References
        ul
          li ES Docs
          li Blog posts, etc
          li Our Docker stuff

      section.content
        h2 Image Credits

      section
        h2 Bullet List
        h3.bullet Powered by <a href="https://github.com/markdalgleish/bespoke-bullets">bespoke-bullets</a>
        ul.sequential
          li Bullet 1
          li Bullet 2
          li Bullet 3

      section
        h2 Syntax Highlighting
        h3 Powered by <a href="http://twitter.com/LeaVerou">Lea Verou</a>'s <a href="https://github.com/LeaVerou/prism">Prism</a>
        pre
          code.language-javascript.
            bespoke.from('article', [
              classes(),
              keys(),
              touch(),
              bullets('li, .bullet')
            ]);

      section(data-bespoke-hash='named-route')
        h2 Named Route
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-hash">bespoke-hash</a>
        p Look up! This route has been named with a <em>'data-bespoke-hash'</em> attribute.

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Emphatic Slide!
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-backdrop">bespoke-backdrop</a>

      section
        h2.bullet Just the beginning...
        br
        ul
          li Edit <a href="http://jade-lang.com/">Jade</a> markup in <em>'src/index.jade'</em>
          li Edit <a href="http://learnboost.github.io/stylus/">Stylus</a> styles in <em>'src/styles/main.styl'</em>
          li Edit JavaScript in <em>'src/scripts/main.js'</em>
        br
        ul
          li
            strong Enjoy! :)
            a(href='http://twitter.com/markdalgleish')  -@markdalgleish

    script(src='build/build.js')
