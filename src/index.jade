doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Drupal and ElasticSearch

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 How I learned to love Elasticsearch
        // Joke about 'we'?
        h4 A love story, by @tizzo y @nstielau

      section.content(data-bespoke-fx-transition="cube" data-bespoke-fx-direction="vertical" data-bespoke-fx-reverse="true")
        div(style="float:right;")
          h2 Nick Stielau
          h3 @nstielau:
          h4 Panthoer, Operator
          img(src="images/nstielau.jpg" width="100")
        div
          h2 Howard Tyson
          h3 aka @tizzo:
          img(src="images/tizzo.jpg" width="100")

      section.tizzo.chapter
        h1 Elasticsearch is..
        h3
          = 'a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management.'

      section.content.cluster
        h2 Distributed
        p "Elasticsearch allows you to start small and scale horizontally as you grow. Simply add more nodes, and let the cluster automatically take advantage of the extra hardware."
        p "Zen Disco, Master Election, Replicas"

      section.content.asf
        h2 Open source
        p The Apache License (/əˈpætʃi/) is a free software license written by the Apache Software Foundation (ASF). The Apache License requires preservation of the copyright notice and disclaimer.

      section.content
        h2 Document-oriented
        pre(style="overflow:hidden;")
          code.language-javascript.
            [
              {
                "name": "Fin",
                "nickname": "Finito Burrito",
                "breed": "megamutt",
                "species": "canine"
              },
              {
                "name": "Stieggie",
                "breed": "German Wire-haired Pointer",
                "family_tree": {
                  "father": "Deus"
                }
                "species": "canine"
              }
            ]
        // no pre-defined schema
        // Allows nested documents

      section.content
        h2 Near Realtime*
        p The difference between realtime and near-realtime is that near-realtime is not realtime.

      section.content.lucene
        h2 Built on Apache Lucene™
        p Just like:
        ul
          li Solr
          li (some?) LinkedIn search functionality
        p (like all good open source search)

      section.content
        h2 ...Java (and the JVM)
        p

      section.content
        h2 Clusterable
        img(src="/images/es_head.png" width="600")

      section.content
        h2 Clusterable: Data security
        h3 "make sure you mention that elasticsearch is a very good primary data store for critical mutable data." - @joemiller

        h3 "To be precise, Elasticsearch’s transaction log does not put your data safety first. It puts it anywhere from zero to five seconds later." -Aphyr

        ul
          li
            a(href="https://aphyr.com/posts/323-call-me-maybe-elasticsearch-1-5-0") Aphyr's "Call me maybe" for Elasticsearch 1.5.0

          li
            a(href="http://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html") Elasticsearch Resiliency Status

      section.content
        h2 Clusterable: replicas

      section.content
        h2 Clusterable: ZenDisco!

      section.content
        h2 Clusterable: Leader Election
        p have 1 node or 5 nodes

      section.chapter
        h1 Dude, I've been searching for nodes since like, 2005

      section.content
        h2 ES vs. MySQL Full-text Search
        p This works out-of-the-box, but it can
        ul
          li hit the db hard
          li be slow
          li not provide good results

      section.content
        // TODO: We should finish breaking this up into subslides
        // for this section.
        h2 ES vs. Solr
        //  (NS as Solr vs. HT as ES, i.e. mac vs. pc)
        ul
          li How does it compare Solr?
          li Both Apache 2 Licensed
          li Both supported by commercial orgs
          li Both support HTTP indexes
          li Competition makes stuff better!
          li http://solr-vs-elasticsearch.com/

      section.content.sphinx
        h2.sphinx ES vs.

      section.nstielau.quote.apple
        p "I guess comparing Elasticsearch to Solr is apples to apples, but really it's like comaping a new apple to a rotten apple." -Elasticsearch User

      section.nstielau.content
        h2 Bonus! sane capitalization
        h3 sane...
        pre(style="font-size:1.2em;")
          code.language-javascript= '<?php captial_E_duh( "Elasticsearch" );'
        h3 uh...
        pre(style="font-size:1.2em;")
          code.language-javascript= '<?php capital_P_dangit( "WordPress" ); ?>'

      session.chapter
        h1 Ain't no Party like a cURL Party
          span(style="color:#ae81ff;")  because a cURL is
          span(style="color:#a6e22e;")  nerdy

      section.content
        h2 Create an index (curl)
        pre
          code.language-javascript.
            curl -XPUT 'http://localhost:9200/animals/' -d '
              index:
                number_of_shards : 3
                number_of_replicas : 2
            '
            curl 127.0.0.1

      section.content
        // http://joelabrahamsson.com/elasticsearch-101/
        h2 Inserting docs
        strong Request:
        pre
          code.language-javascript.
            curl -XPUT "http://localhost:9200/animals/dogs/1" -d'
            {
                "breed": "'doodle'",
                "name": "Molly",
                "is_good": false
            }'

        strong Response:
        pre
          code.language-javascript.
            {
                "ok": true,
                "_index": "animals",
                "_type": "dog",
                "_id": 1,
                "_version": 2
            }'

      section.content
        // http://joelabrahamsson.com/elasticsearch-101/
        h2 Retreiving a doc
        strong Request:
        pre
          code.language-javascript.
            curl -XGET "http://localhost:9200/animals/dogs/1"

        strong Response:
        pre
          code.language-javascript.
            {
                "_index": "animals",
                "_type": "dog",
                "_id": 1,
                "_version": 2,
                "exists": true,
                "_source": {
                  "breed": "'doodle'",
                  "name": "Molly",
                  "is_good": false
                }
            }

      section.content
        h2 Searching
        pre
          code.language-javascript.
            curl -XPOST "http://localhost:9200/_search" -d'
            {
                "query": {
                    "query_string": {
                        "query": "labrador"
                    }
                },
                "filter": {
                  "term": {"is_good": true}
                }
            }'

      section.nstielau
        img(src="images/orcas.png" width="600")

      section.tizzo.chapter
        h1 Advanced Features

      section.nstielau.content.merlin
        h2 Clarks' Laws vis-á-vis ES
        ol
          li When a distinguished but elderly scientist states that something is possible, he is almost certainly right. When he states that something is impossible, he is very probably wrong.

          li The only way of discovering the limits of the possible is to venture a little way past them into the impossible.

          li Any sufficiently advanced technology is
            br
            strong  indistinguishable from magic.


      section.content
        h2 Histogram
        img(src="images/es_histogram.png" width="350")

      section.content
        h2 Percolate
        img(src="images/percolate-yo-dawg.jpg")

      section.content
        h2 Percolate: Store a Query
        strong
        pre
          code.language-javascript.
            curl -XPUT 'localhost:9200/my-index/.percolator/security' -d '{
              "query" : {
                "match" : {
                  "message" : "(message:XSS OR message:security)"
                }
              }
            }'

      section.content
        h2 Percolate: Query for matches
        h3 Running:
        pre
          code.language-javascript.
            curl -XGET 'localhost:9200/core-commits/message/_percolate' -d '{
              "doc" : {
                "message" : "Issue #27230: Fix XHTML slash in XSS filter"
              }
            }'

      section.content
        h2 Percolate: Get results
        pre
          code.language-javascript.
            {
              "took" : 19,
              "_shards" : {
                "total" : 5,
                "successful" : 5,
                "failed" : 0
              },
              "total" : 1,
              "matches" : [
                {
                  "_index" : "core-commits",
                  "_id" : "security"
                }
              ]
            }

      section.chapter.tizzo
        h1 Integrating Drupal with Elasticsearch

      section.tizzo.content
        h2 Drupal Modules

      section.chapter.tizzo
        h2
          a(href="https://drupal.org/project/search_api_elasticsearch")
            span Search API Elasticsearch
        ul
          li RUN AWAY, IT'S TOO LATE FOR ME! SAVE YOURSELVES!!!

      section.chapter.tizzo
        h2
          a(href="https://drupal.org/project/elasticsearch_connector")
            span Elasticsearch Connector
        ul
          li Very very cool
          li search_api integration is a little incomplete
          li Views integration
          li Search API backend integration
          li Awesome statistics sub-module

      section.chapter.tizzo
        h2 Log aggregation
        ul
          li logs_http (log directly to elasticsearch)
          li gelf log to logstash, logstash indexes to elasticsearch

      // TODO: Put this in the resources section.
        //p
          //Search API Elasticsearch
          //a http://www.sitepoint.com/install-integrate-elasticsearch-drupal/
          //Howard to write-up/screen capture

      section.tizzo.content
        h2 Example: Score boosting
        p
          strong Scenario:
          span Weight search results by popularity.
        p
          strong Solution:
          span Use `function_score` with a decay function
          ul
            li Every 2h, query Google Analytics
            li Update custom field: "ga_rank" = RANK
            li Use `function_score` multiple natural score by "ga_boost"
        pre
          code.language-javascript.
            "DECAY_FUNCTION": {
                "FIELD_NAME": {
                      "origin": "0",
                      "scale": "100"
                }
            }


      section.chapter
        h1 Devops <3 ES

      section.content.nstielau.elk
        h2 ELK Stack
        ul
          lu What are rich logs?
          li Logstash

      section.content
        h2 ELK
        p The killer app for ElasticSearch
        p
          strong Logstash:
          span  Get data form an input, mutate it, send it to an output

        p
          strong ElasticSearch:
          span  Index the JSON documents into a really useable format

        p
          strong Kibana:
          span  Build interactive dashboards for exploring your data

      section.content.tizzo
        h2 Getting my data into ELK
        ul
          li @amitaibu's
            a(href="https://www.drupal.org/project/logs_http")
              span  Logs HTTP Module
          li System (syslog,
            a(href="https://github.com/systemd/journal2gelf")  journald
            span )
          li tcp, http, udp, varnishlog, file
          li
            a(href="http://logstash.net/docs/1.4.2/")
              span And more

      section.content
        h2 Munging with Logstash
        h3 the richer the better!
        span This message
        pre
          code.language-javascript.
            Issue #27230: Fix XHTML slash in XSS filter

        span passes through this logstash configuration
        pre
          code.language-javascript.
            grok { match => ["message", "Issue #%{NUMBER:issue_id}: %{GREEDYDATA:message}" ] }

        span and gets stored in Elasticsearch kinda like this
        pre
          code.language-javascript.
            {
              "issue_id": "27230",
              "issue_message": "Fix XHTML slash in XSS filter",
              "message": "Issue #27230: Fix XHTML slash in XSS filter"
            }

      section.content
        h2 Bans by IP Address
        h2 ?? Issues by person?
        span so that we can easily see where attacks are coming from
        img(src="/images/banned_ips.png" width="300")

      section.nstielau.content
        h2 What could you do with data?
        ul
          li Actionally address errors
          li Diagnose outage causes
          li Investigate a security breach
          li Identify attacks in progress
          li Alert on abnormal activity

      section.content
        h2 ELK Demo
        img(src="images/black_elk.png")

      section.chapter
        h1 ES Errata

      section.content
        h2 Up and running with ES
        ul
          li DIY (HT)
          li MVP Config Managment (Chef, Puppet)
          li Clustered, Consul for Service Discovery
          li To the future!

      section.content
        h2 Securing ES
        ul
          li install updates
          li firewall with iptables
          li run Kibana behind HTTPS
          li run Elasticsearch behind HTTPS
          li
            a(href="http://brudtkuhl.com/securing-elasticsearch/") More info from brudtkuhl.com

      section.content
        h2 Hosted ElasticSearch
        h3 Criteria
        ul
          li Is the hosted ES near your servers?
          li Does the price work out for the amount of data you have?
          li Does the provider allow customer configuration/tuning?
          li Does the provider understand distributed systems, etc

        h3 Providers
        ul
          li https://qbox.io/
          li https://www.compose.io/elasticsearch/
          li https://www.found.no/
          li https://bonsai.io/

      section.content.nstielau
        h2 How to sneak in ES
        ul
          li Use for ops
          li show is awesome


      section.content
        h2 References
        ul
          li ES Docs
          li Blog posts, etc
          li Our Docker stuff

      section.content
        h2 Image Credits

      section
        h2 Bullet List
        h3.bullet Powered by <a href="https://github.com/markdalgleish/bespoke-bullets">bespoke-bullets</a>
        ul.sequential
          li Bullet 1
          li Bullet 2
          li Bullet 3

      section
        h2 Syntax Highlighting
        h3 Powered by <a href="http://twitter.com/LeaVerou">Lea Verou</a>'s <a href="https://github.com/LeaVerou/prism">Prism</a>
        pre
          code.language-javascript.
            bespoke.from('article', [
              classes(),
              keys(),
              touch(),
              bullets('li, .bullet')
            ]);

      section(data-bespoke-hash='named-route')
        h2 Named Route
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-hash">bespoke-hash</a>
        p Look up! This route has been named with a <em>'data-bespoke-hash'</em> attribute.

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Emphatic Slide!
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-backdrop">bespoke-backdrop</a>

      section
        h2.bullet Just the beginning...
        br
        ul
          li Edit <a href="http://jade-lang.com/">Jade</a> markup in <em>'src/index.jade'</em>
          li Edit <a href="http://learnboost.github.io/stylus/">Stylus</a> styles in <em>'src/styles/main.styl'</em>
          li Edit JavaScript in <em>'src/scripts/main.js'</em>
        br
        ul
          li
            strong Enjoy! :)
            a(href='http://twitter.com/markdalgleish')  -@markdalgleish

    script(src='build/build.js')
    script(src="bower_components/prism/prism.js")
